{"ast":null,"code":"import { createContext, useEffect, useContext, useState } from \"react\";\nimport { createUserWithEmailAndPassword, onAuthStateChanged, signOut, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../firebase/Firebase\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// const AuthProvider = ({ children }) => {\n//     const [crrrentUser, setCurrentUser] = useState();\n//     const [loading, setLoading] = useState(true);\n//     const signup = (email, password) => {\n//         createUserWithEmailAndPassword(auth, email, password);\n//     };\n\n//     const login = (email, password) => {\n//         signInWithEmailAndPassword(auth, email, password);\n//     }\n\n//     useEffect(() => {\n//         const unsubcribe = onAuthStateChanged(auth, (user) => {\n//             setCurrentUser(user);\n//             setLoading(false);\n//         });\n//         return () => {\n//             unsubcribe();\n//         };\n//     }, []);\n\n//     return (\n//         <AuthContext.Provider value={{ crrrentUser, signup }} >\n//             {!loading && children}\n//         </AuthContext.Provider>\n//     );\n// };\n\n// export default AuthProvider;\n\n// export const useAuth = () => {\n//     return useContext(AuthContext)\n// }","map":{"version":3,"names":["createContext","useEffect","useContext","useState","createUserWithEmailAndPassword","onAuthStateChanged","signOut","signInWithEmailAndPassword","auth","AuthContext"],"sources":["C:/Users/Lenovo/Desktop/reactjs for test/app-test/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useEffect, useContext, useState } from \"react\";\r\nimport { createUserWithEmailAndPassword, onAuthStateChanged, signOut, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth } from \"../firebase/Firebase\";\r\n\r\nconst AuthContext = createContext();\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const AuthProvider = ({ children }) => {\r\n//     const [crrrentUser, setCurrentUser] = useState();\r\n//     const [loading, setLoading] = useState(true);\r\n//     const signup = (email, password) => {\r\n//         createUserWithEmailAndPassword(auth, email, password);\r\n//     };\r\n\r\n//     const login = (email, password) => {\r\n//         signInWithEmailAndPassword(auth, email, password);\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         const unsubcribe = onAuthStateChanged(auth, (user) => {\r\n//             setCurrentUser(user);\r\n//             setLoading(false);\r\n//         });\r\n//         return () => {\r\n//             unsubcribe();\r\n//         };\r\n//     }, []);\r\n\r\n//     return (\r\n//         <AuthContext.Provider value={{ crrrentUser, signup }} >\r\n//             {!loading && children}\r\n//         </AuthContext.Provider>\r\n//     );\r\n// };\r\n\r\n// export default AuthProvider;\r\n\r\n// export const useAuth = () => {\r\n//     return useContext(AuthContext)\r\n// }"],"mappings":"AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACtE,SAASC,8BAA8B,EAAEC,kBAAkB,EAAEC,OAAO,EAAEC,0BAA0B,QAAQ,eAAe;AACvH,SAASC,IAAI,QAAQ,sBAAsB;AAE3C,MAAMC,WAAW,gBAAGT,aAAa,EAAE;;AAOnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}